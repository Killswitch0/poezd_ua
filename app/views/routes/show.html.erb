<p style="color: green"><%= notice %></p>

<p>
  <strong>Название:</strong>
  <%= @route.name %>
</p>

<% if @route.railway_stations.empty? %>
  Список пуст
<% else %>
  <table>
    <thead>
    <tr>
      <td>Название</td>
      <td>Позиция</td>
    </tr>
    </thead>
    <tbody>
    <!-- делаем выборку по скоупу ordered - прописан в моделе r_s -->
    <% @route.railway_stations.ordered.each do |station| %>
      <tr>
        <td><%= station.title %></td>
        <td>
          <!-- добавляем общую форму form_tag, в которой сами определяем параметры в ней
           и как с ними работать.
           form_tag создает форму без привязки к конкретному объекту.
           Первым параметром он принимает URL - куда отправлять.
           Раз у нас экшн update_position вызывается у конкретного объекта, мы должны в параметры
            URL передать этот объект, для которого должна быть форма, чтобы подставился id.
            По умолчанию form_tag - это отправка методом POST, а наш экшн требует метод PATCH,
            поэтому нужно в явном виде указать метод PATCH. Rails 7.0.3 требует писать :put.
            form_tag не предоставляет хэлперов формы, как в form_for, типа |f| do 'f.title' end
            Раз форма не связана ни с каким объектом, то и поле не связано ни с каким атрибутом -->
          <%= form_tag update_position_railway_station_path(station), method: :put do  %>
            <!-- В :position, ... нужно передать значение этого поля, однако поле находится
             в промежуточной модели, но мы не должны напрямую обращаться к промежуточным моделям,
             нужно это как можно сильнее скрывать за реальными объектами, поэтому напишем
             метод position_in в модели r_s -->
            <%= number_field_tag :position, station.position_in(@route) %>
            <!-- Кроме позиции нам нужно передать id маршрута, поскольку если мы передадим только позицию,
             то непонятно в каком маршруте нам нужно обновлять эту позицию, вторым параметром @route.id будет
             значение первого параметра. Подробнее в r_s controller, метод update_position.
             hidden_field_tag скроет его от пользователя, поскольку информация @route.id не для изменения:
             тег будет присутсовать в HTML форме, но не будет виден пользователю
             -->
            <%= hidden_field_tag :route_id, @route.id %>
            <%= submit_tag 'Изменить' %>
          <% end %>
        </td>
      </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

<div>
  <%= link_to "Изменить", edit_route_path(@route) %> |
  <%= link_to "Удалить", @route, data: {
      turbo_method: :delete,
      turbo_confirm: 'Вы уверены?'
  } %>
</div>